# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class ListingDistance(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, euclidean: float=None):
        """Host - a model defined in Swagger

        :param id: The id of the Listing.
        :type id: int
        :param euclidean: The calculated euclidean distance
        :type euclidean: float
        """
        self.swagger_types = {
            'id': int,
            'euclidean': float
        }

        self.attribute_map = {
            'id': 'id',
            'euclidean': 'euclidean',
        }
        self._id = id
        self.euclidean = euclidean

    @classmethod
    def from_dict(cls, dikt) -> 'ListingDistance':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ListingDistance
        :rtype: ListingDistance
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Listing.


        :return: The id of this Listing.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Listing.


        :param id: The id of this Listing.
        :type id: int
        """

        self._id = id

    @property
    def euclidean(self) -> float:
        """The euclidean of this Listing.


        :return: The euclidean of this Listing.
        :rtype: float
        """
        return self._euclidean

    @euclidean.setter
    def euclidean(self, euclidean: float):
        """Sets the euclidean of this Listing.


        :param euclidean: The euclidean of this Listing.
        :type euclidean: float
        """

        self._euclidean = euclidean

